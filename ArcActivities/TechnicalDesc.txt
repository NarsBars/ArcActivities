Data Model

- Activity - Top level container for all "Mission"-like activities
  - Two modes, Individual or Shared
  - Individual activities are instanced per-player and tracked per-player
  - Shared Activities are synced by use of a single blackboard.  

- Activities have Stages, that progress in a branching fashion through the Activity Tree.  
   - Stages have two outputs, Success or Fail.  
- Stages have Objectives, which each have an array of blueprintable Trackers.
   - Objectives reference the Activity Blackboard.  If the Activity is shared, then Objectives will reference that shared blackboard.    
   - Trackers have two implementable functions, Initialize and Tick.  Trackers may have additional functions (use this to bind to delegates to track events in the game).
   - Trackers has a callable function "Report", which tells the objective that the tracker has done something
   - Trackers are instanced per-Objective.  They can have properties.
   - Trackers update the blackboard when they detect a change they are tracking.  They then must call Report for the Objective to be made aware.
   - Objectives are Complete when the blackboard value that the Objective is using is at a value set by the objective. The completion may be a Success or Failure
   - Upon completion of an objective, an Activity moves to it's next stage, as defined by the Activity Graph's Success or Failure pins.   
-Stages have Stage Service, which are blueprintable classes
   -Stage Services are instanced.
   -They have two implementable functions, OnStageStart and OnStageEnd (with a succeed or fail param).
   - Stage Services are intended to look handle stage transition events
   - Stage Services can tick (not recommended)
   - Stage Services look at the blackboard

- If a stage has no child stage in either success or failure when one of those is called, the Activity becomes complete, either succeeding or failing depending on which is called.  

Activities have a Blackboard, which is used for objectives to track data and for trackers to update.  It is also the part that is replicated to players in multiplayer.
Blackboards are synced to other activity instances when the activity is shared, and instances are created when the activity is not shared

Game State has a Global Activity Manager (GAM), which instantiates activities (based on their mode).  It also tracks the stage progress of a shared activity.  

Each player has a Player Activity Manager (PAM).  The PAM tracks which activities players have active (they may have many) and the current progress of those activities.  If a player has a shared Activity, that shared activity may be updated by the GAM.  The PAM also has a number of delegates for activity changes that can be bound to by UI.  